#@ load("@ytt:data", "data")

#@ def jobs_map_from_list(list_of_jobs):
#@   jobs = {}
#@   for job in list_of_jobs:
#@     name = job['name']
#@     jobs[name] = job
#@   end
#@   return jobs
#@ end

#@ def base_image_job(erlang_version):
name: #@ ("ci-base-" + erlang_version).replace(".", "_")
runs-on: ubuntu-18.04
steps:
  - name: CHECKOUT REPOSITORY
    uses: actions/checkout@v2
    with:
      path: rabbitmq
  - name: CREATE ERLANG+ELIXIR IMAGE
    uses: docker/build-push-action@v1
    with:
      username: _json_key
      password: ${{ secrets.GCR_JSON_KEY }}
      registry: eu.gcr.io
      repository: cf-rabbitmq-core/erlang_elixir
      dockerfile: #@ "rabbitmq/ci/dockerfiles/" + erlang_version + "/erlang_elixir"
      tags: #@ erlang_version
  #@ for ref in data.values.secondary_umbrella_gitrefs:
  - name: #@ 'CHECKOUT REPOSITORY ({})'.format(ref)
    uses: actions/checkout@v2
    with:
      ref: #@ ref
      path: #@ 'rabbitmq-{}'.format(ref)
  #@ end
  - name: CREATE BASE CI IMAGE
    uses: docker/build-push-action@v1
    with:
      username: _json_key
      password: ${{ secrets.GCR_JSON_KEY }}
      registry: eu.gcr.io
      repository: cf-rabbitmq-core/ci-base
      dockerfile: rabbitmq/ci/dockerfiles/ci-base
      build_args: #@ 'ERLANG_VERSION={}'.format(erlang_version)
      tags: #@ erlang_version
#@ end
---
name: Base Images
#! https://github.com/k14s/ytt/issues/189
a_magic_string_that_we_will_sed_to_on: [workflow_dispatch]
jobs: #@ jobs_map_from_list([base_image_job(v) for v in data.values.erlang_versions])
