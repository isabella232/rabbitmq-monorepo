#@ load("@ytt:data", "data")

#@ def jobs_map_from_list(list_of_jobs):
#@   jobs = {}
#@   for job in list_of_jobs:
#@     name = job['name']
#@     jobs[name] = job
#@   end
#@   return jobs
#@ end

#@ def to_build_args(d):
#@   return ",".join(['{0}={1}'.format(k,d[k]) for k in d.keys()])
#@ end

#@ def base_image_job(erlang_version):
name: #@ ("ci-base-" + erlang_version).replace(".", "_")
runs-on: ubuntu-18.04
steps:
  - name: CHECKOUT REPOSITORY
    uses: actions/checkout@v2
  - name: #@ 'CREATE ERLANG+ELIXIR IMAGE ({})'.format(erlang_version)
    uses: docker/build-push-action@v1
    with:
      username: _json_key
      password: ${{ secrets.GCR_JSON_KEY }}
      registry: eu.gcr.io
      repository: cf-rabbitmq-core/erlang_elixir
      dockerfile: #@ 'ci/dockerfiles/{}/erlang_elixir'.format(erlang_version)
      tags: #@ erlang_version
  - name: #@ 'CREATE BASE CI IMAGE ({})'.format(erlang_version)
    uses: docker/build-push-action@v1
    with:
      username: _json_key
      password: ${{ secrets.GCR_JSON_KEY }}
      registry: eu.gcr.io
      repository: cf-rabbitmq-core/ci-base
      dockerfile: ci/dockerfiles/ci-base
      #@ build_args = {}
      #@ build_args["ERLANG_VERSION"] = erlang_version
      #@ build_args["SECONDARY_UMBRELLA_GITREFS"] = ' '.join(data.values.secondary_umbrella_gitrefs)
      build_args: #@ to_build_args(build_args)
      tags: #@ erlang_version
#@ end
---
name: Workflow Base Images
#! https://github.com/k14s/ytt/issues/189
a_magic_string_that_we_will_sed_to_on: [workflow_dispatch]
jobs: #@ jobs_map_from_list([base_image_job(v) for v in data.values.erlang_versions])
